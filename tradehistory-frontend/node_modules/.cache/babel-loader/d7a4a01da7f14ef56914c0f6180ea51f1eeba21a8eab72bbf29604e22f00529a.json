{"ast":null,"code":"var _jsxFileName = \"/Users/t2023-m0017/Desktop/sparta/spring/final/mock-trading-springboot/tradehistory-frontend/src/components/orders/OrderForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { placeMarketOrder, placeLimitOrder } from '../../api/order';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderForm = ({\n  accountId,\n  token\n}) => {\n  _s();\n  const [orderType, setOrderType] = useState('market'); // or 'limit'\n  const [buyOrSell, setBuyOrSell] = useState('buy');\n  const [stockCode, setStockCode] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [price, setPrice] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const orderData = {\n      stockCode,\n      quantity,\n      price: Number(price)\n    };\n    try {\n      if (orderType === 'market') {\n        await placeMarketOrder(accountId, buyOrSell, orderData, token);\n      } else {\n        await placeLimitOrder(accountId, buyOrSell, orderData, token);\n      }\n      alert('주문이 완료되었습니다.');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      alert('주문 실패: ' + ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: orderType,\n      onChange: e => setOrderType(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"market\",\n        children: \"\\uC2DC\\uC7A5\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"limit\",\n        children: \"\\uC9C0\\uC815\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: buyOrSell,\n      onChange: e => setBuyOrSell(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"buy\",\n        children: \"\\uB9E4\\uC218\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"sell\",\n        children: \"\\uB9E4\\uB3C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\uC885\\uBAA9\\uCF54\\uB4DC\",\n      value: stockCode,\n      onChange: e => setStockCode(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\uC218\\uB7C9\",\n      type: \"number\",\n      value: quantity,\n      onChange: e => setQuantity(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), orderType === 'limit' && /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\uAC00\\uACA9\",\n      type: \"number\",\n      value: price,\n      onChange: e => setPrice(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uC8FC\\uBB38\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(OrderForm, \"wKtqbc5NrUtfgDrt/214a7bs6os=\");\n_c = OrderForm;\nexport default OrderForm;\nvar _c;\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"names":["React","useState","placeMarketOrder","placeLimitOrder","jsxDEV","_jsxDEV","OrderForm","accountId","token","_s","orderType","setOrderType","buyOrSell","setBuyOrSell","stockCode","setStockCode","quantity","setQuantity","price","setPrice","handleSubmit","e","preventDefault","orderData","Number","alert","error","_error$response","_error$response$data","response","data","message","onSubmit","children","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","required","type","_c","$RefreshReg$"],"sources":["/Users/t2023-m0017/Desktop/sparta/spring/final/mock-trading-springboot/tradehistory-frontend/src/components/orders/OrderForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { placeMarketOrder, placeLimitOrder } from '../../api/order';\n\nconst OrderForm = ({ accountId, token }) => {\n    const [orderType, setOrderType] = useState('market'); // or 'limit'\n    const [buyOrSell, setBuyOrSell] = useState('buy');\n    const [stockCode, setStockCode] = useState('');\n    const [quantity, setQuantity] = useState('');\n    const [price, setPrice] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const orderData = { stockCode, quantity, price: Number(price) };\n\n        try {\n            if (orderType === 'market') {\n                await placeMarketOrder(accountId, buyOrSell, orderData, token);\n            } else {\n                await placeLimitOrder(accountId, buyOrSell, orderData, token);\n            }\n            alert('주문이 완료되었습니다.');\n        } catch (error) {\n            alert('주문 실패: ' + error.response?.data?.message);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <select value={orderType} onChange={(e) => setOrderType(e.target.value)}>\n                <option value=\"market\">시장가</option>\n                <option value=\"limit\">지정가</option>\n            </select>\n            <select value={buyOrSell} onChange={(e) => setBuyOrSell(e.target.value)}>\n                <option value=\"buy\">매수</option>\n                <option value=\"sell\">매도</option>\n            </select>\n            <input placeholder=\"종목코드\" value={stockCode} onChange={(e) => setStockCode(e.target.value)} required />\n            <input placeholder=\"수량\" type=\"number\" value={quantity} onChange={(e) => setQuantity(e.target.value)} required />\n            {orderType === 'limit' && (\n                <input placeholder=\"가격\" type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} required />\n            )}\n            <button type=\"submit\">주문</button>\n        </form>\n    );\n};\n\nexport default OrderForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}